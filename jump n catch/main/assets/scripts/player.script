--Define uma propriedade "speed" visível no editor, com valor inicial 200
go.property("speed", 200)

function init(self)
	--Tabela para guardar o estado das teclas de movimento
	self.input = {
		left = false,
		right = false
	}

	self.vel = vmath.vector3(0, 0, 0)
	self.gravidade = -600
	self.forca_pulo = 300
	self.grounded = false
	
--Pede ao motor para que este objeto receber eventos de input (teclado, rato, etc...)
msg.post(".", "acquire_input_focus")
end

function update(self, dt)
	--Cria um vetor de direção inicializando a (0,0,0)
	local dir = vmath.vector3()
	-- Atualiza a direção com base nas teclas premidas
	if self.input.left then dir.x = dir.x - 1 end
	if self.input.right then dir.x = dir.x + 1 end

	--SE houver movimento (dir n igual 0), normaliza e atualiza a posição.
	if dir.x ~= 0 then
		dir = vmath.normalize(dir)--Normaliza para manter a velocidade constante.
		go.set_position(go.get_position() + dir * self.speed * dt)--Move o objeto
	end
	--Atualiza velocidade vertical com gravidade
	self.vel.y = self.vel.y + self.gravidade * dt

	--Cria vetor de movimento total
	local movimento = vmath.vector3(dir.x * self.speed * dt, self.vel.y * dt, 0)

	--move o objeto
	go.set_position(go.get_position() + movimento)

	--IMPORTANTE:grounded é resetado aqui. só será reativado em on_message()
	self.grounded = false
end

function on_input(self, action_id, action)
	--Trata o input para a tecla "left"
	if action_id == hash("left") then
		if action.pressed then
			self.input.left = true --ativa o movimento à esquerda
		elseif action.released then
			self.input.left = false --desativa o movimento à esquerda
		end

		--Trata o input para a tecla "right"
	elseif action_id == hash("right") then
		if action.pressed then
			self.input.right = true --ativa o movimento à direita
		elseif action.released then
			self.input.right = false --desativa o movimento à direita
		end
	end
end